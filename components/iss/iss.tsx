/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Jack Kelly (https://sketchfab.com/slightlyintelligent)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/3december-2021-international-space-station-a91871ba086749a492c12976cdcf321b
title: 3December 2021 - International Space Station
*/

// "International Space Station" (https://skfb.ly/orFzK) by Jack Kelly is licensed under Creative Commons Attribution (http://creativecommons.org/licenses/by/4.0/).

// npx @react-three/gltfjsx iss.glb iss.js

import type { GLTF } from './types';

import { useGLTF } from '@react-three/drei';
import { Box3, Object3D, Vector3 } from 'three';
import { useEffect, useState } from 'react';

import { animated, useSpring } from '@react-spring/three';

import { getIssScaledLength } from './helpers';
import useWhereIsISS from './use-where-is-iss';

const path = '/models/iss/scene.gltf';

export default function IssWrapper() {
	const coords = useWhereIsISS();
	const model = useGLTF(path);

	if (coords[0] || coords[1] || coords[2]) {
		return <IssModel coords={coords} model={model} />;
	} else return <></>;
}

function IssModel({
	coords,
	model,
}: {
	coords: number[];
	model: { scene: Object3D };
}) {
	const { nodes } = model as GLTF;

	const [scale, setScale] = useState(0);

	useEffect(() => {
		const bb = new Box3();
		bb.setFromObject(model.scene);

		const length = bb.max.y - bb.min.y;
		const scaledLength = getIssScaledLength(length);

		setScale(scaledLength * 5_000);
	}, [model]);

	const { position } = useSpring({
		position: coords,
		config: { duration: 5_000 },
	});

	return (
		<animated.group
			dispose={null}
			position={position as unknown as Vector3}
			scale={scale}
		>
			{' '}
			<group rotation={[-Math.PI / 2, 0, 0]}>
				<group rotation={[Math.PI / 2, 0, 0]}>
					<group
						position={[-32.35, 0, 0]}
						rotation={[0, -Math.PI / 9, 0]}
					>
						<mesh
							geometry={nodes['Metal_Matte-material'].geometry}
							material={nodes['Metal_Matte-material'].material}
						/>
						<mesh
							geometry={nodes['Strut_Small-material'].geometry}
							material={nodes['Strut_Small-material'].material}
						/>
						<mesh
							geometry={nodes['Solar_Cell-material'].geometry}
							material={nodes['Solar_Cell-material'].material}
						/>
						<mesh
							geometry={nodes['Solar_Rear-material'].geometry}
							material={nodes['Solar_Rear-material'].material}
						/>
					</group>
					<group
						position={[-48, 0, 0]}
						rotation={[0, -Math.PI / 9, 0]}
					>
						<mesh
							geometry={nodes['Metal_Matte-material_1'].geometry}
							material={nodes['Metal_Matte-material_1'].material}
						/>
						<mesh
							geometry={nodes['Strut_Small-material_1'].geometry}
							material={nodes['Strut_Small-material_1'].material}
						/>
						<mesh
							geometry={nodes['Solar_Cell-material_1'].geometry}
							material={nodes['Solar_Cell-material_1'].material}
						/>
						<mesh
							geometry={nodes['Solar_Rear-material_1'].geometry}
							material={nodes['Solar_Rear-material_1'].material}
						/>
					</group>
					<group position={[32.65, 0, 0]} rotation={[0, -0.17, 0]}>
						<mesh
							geometry={nodes['Metal_Matte-material_2'].geometry}
							material={nodes['Metal_Matte-material_2'].material}
						/>
						<mesh
							geometry={nodes['Strut_Small-material_2'].geometry}
							material={nodes['Strut_Small-material_2'].material}
						/>
						<mesh
							geometry={nodes['Solar_Cell-material_2'].geometry}
							material={nodes['Solar_Cell-material_2'].material}
						/>
						<mesh
							geometry={nodes['Solar_Rear-material_2'].geometry}
							material={nodes['Solar_Rear-material_2'].material}
						/>
					</group>
					<group position={[48.25, 0, 0]} rotation={[0, -0.17, 0]}>
						<mesh
							geometry={nodes['Metal_Matte-material_3'].geometry}
							material={nodes['Metal_Matte-material_3'].material}
						/>
						<mesh
							geometry={nodes['Strut_Small-material_3'].geometry}
							material={nodes['Strut_Small-material_3'].material}
						/>
						<mesh
							geometry={nodes['Solar_Cell-material_3'].geometry}
							material={nodes['Solar_Cell-material_3'].material}
						/>
						<mesh
							geometry={nodes['Solar_Rear-material_3'].geometry}
							material={nodes['Solar_Rear-material_3'].material}
						/>
					</group>
					<group position={[-32.35, 0, 0]} rotation={[Math.PI, 0, 0]}>
						<mesh
							geometry={nodes['Metal_Matte-material_4'].geometry}
							material={nodes['Metal_Matte-material_4'].material}
						/>
						<mesh
							geometry={nodes['Strut_Small-material_4'].geometry}
							material={nodes['Strut_Small-material_4'].material}
						/>
						<mesh
							geometry={nodes['Solar_Cell-material_4'].geometry}
							material={nodes['Solar_Cell-material_4'].material}
						/>
						<mesh
							geometry={nodes['Solar_Rear-material_4'].geometry}
							material={nodes['Solar_Rear-material_4'].material}
						/>
					</group>
					<group position={[-48, 0, 0]} rotation={[Math.PI, 0, 0]}>
						<mesh
							geometry={nodes['Metal_Matte-material_5'].geometry}
							material={nodes['Metal_Matte-material_5'].material}
						/>
						<mesh
							geometry={nodes['Strut_Small-material_5'].geometry}
							material={nodes['Strut_Small-material_5'].material}
						/>
						<mesh
							geometry={nodes['Solar_Cell-material_5'].geometry}
							material={nodes['Solar_Cell-material_5'].material}
						/>
						<mesh
							geometry={nodes['Solar_Rear-material_5'].geometry}
							material={nodes['Solar_Rear-material_5'].material}
						/>
					</group>
					<group position={[32.65, 0, 0]} rotation={[Math.PI, 0, 0]}>
						<mesh
							geometry={nodes['Metal_Matte-material_6'].geometry}
							material={nodes['Metal_Matte-material_6'].material}
						/>
						<mesh
							geometry={nodes['Strut_Small-material_6'].geometry}
							material={nodes['Strut_Small-material_6'].material}
						/>
						<mesh
							geometry={nodes['Solar_Cell-material_6'].geometry}
							material={nodes['Solar_Cell-material_6'].material}
						/>
						<mesh
							geometry={nodes['Solar_Rear-material_6'].geometry}
							material={nodes['Solar_Rear-material_6'].material}
						/>
					</group>
					<group position={[48.25, 0, 0]} rotation={[Math.PI, 0, 0]}>
						<mesh
							geometry={nodes['Metal_Matte-material_7'].geometry}
							material={nodes['Metal_Matte-material_7'].material}
						/>
						<mesh
							geometry={nodes['Strut_Small-material_7'].geometry}
							material={nodes['Strut_Small-material_7'].material}
						/>
						<mesh
							geometry={nodes['Solar_Cell-material_7'].geometry}
							material={nodes['Solar_Cell-material_7'].material}
						/>
						<mesh
							geometry={nodes['Solar_Rear-material_7'].geometry}
							material={nodes['Solar_Rear-material_7'].material}
						/>
					</group>
					<mesh
						geometry={nodes['Strut_Small-material_8'].geometry}
						material={nodes['Strut_Small-material_8'].material}
					/>
					<mesh
						geometry={nodes['White_Panel-material'].geometry}
						material={nodes['White_Panel-material'].material}
					/>
					<mesh
						geometry={nodes['Strut_Small-material_9'].geometry}
						material={nodes['Strut_Small-material_9'].material}
					/>
					<mesh
						geometry={nodes['White_Panel-material_1'].geometry}
						material={nodes['White_Panel-material_1'].material}
					/>
					<mesh
						geometry={nodes['Metal_Matte-material_8'].geometry}
						material={nodes['Metal_Matte-material_8'].material}
					/>
					<group position={[-43.71, 0, 0]} scale={[8, 1, 1]}>
						<mesh
							geometry={nodes['White_Panel-material_2'].geometry}
							material={nodes['White_Panel-material_2'].material}
						/>
						<mesh
							geometry={nodes['White_Gloss-material'].geometry}
							material={nodes['White_Gloss-material'].material}
						/>
						<mesh
							geometry={nodes['Metal_Chrome-material'].geometry}
							material={nodes['Metal_Chrome-material'].material}
						/>
					</group>
					<group position={[-28.31, 0, 0]} scale={[8, 1, 1]}>
						<mesh
							geometry={nodes['White_Panel-material_3'].geometry}
							material={nodes['White_Panel-material_3'].material}
						/>
						<mesh
							geometry={nodes['White_Gloss-material_1'].geometry}
							material={nodes['White_Gloss-material_1'].material}
						/>
						<mesh
							geometry={nodes['Metal_Chrome-material_1'].geometry}
							material={nodes['Metal_Chrome-material_1'].material}
						/>
					</group>
					<group position={[28.29, 0, 0]} scale={[8, 1, 1]}>
						<mesh
							geometry={nodes['White_Panel-material_4'].geometry}
							material={nodes['White_Panel-material_4'].material}
						/>
						<mesh
							geometry={nodes['White_Gloss-material_2'].geometry}
							material={nodes['White_Gloss-material_2'].material}
						/>
						<mesh
							geometry={nodes['Metal_Chrome-material_2'].geometry}
							material={nodes['Metal_Chrome-material_2'].material}
						/>
					</group>
					<group position={[43.69, 0, 0]} scale={[8, 1, 1]}>
						<mesh
							geometry={nodes['White_Panel-material_5'].geometry}
							material={nodes['White_Panel-material_5'].material}
						/>
						<mesh
							geometry={nodes['White_Gloss-material_3'].geometry}
							material={nodes['White_Gloss-material_3'].material}
						/>
						<mesh
							geometry={nodes['Metal_Chrome-material_3'].geometry}
							material={nodes['Metal_Chrome-material_3'].material}
						/>
					</group>
					<group
						position={[0, -4.9, 0]}
						rotation={[-Math.PI / 2, 0, 0]}
						scale={[1.5, 1.5, 1.5]}
					>
						<mesh
							geometry={nodes['Metal_Brushed-material'].geometry}
							material={nodes['Metal_Brushed-material'].material}
						/>
					</group>
					<group
						position={[0, -4.9, 5.25]}
						rotation={[Math.PI, 0, 0]}
						scale={[1.5, 1.5, 1.5]}
					>
						<mesh
							geometry={
								nodes['Metal_Brushed-material_1'].geometry
							}
							material={
								nodes['Metal_Brushed-material_1'].material
							}
						/>
					</group>
					<group
						position={[0, -4.9, 11.25]}
						rotation={[Math.PI, 0, 0]}
						scale={[1.5, 1.5, 1.5]}
					>
						<mesh
							geometry={
								nodes['Metal_Brushed-material_2'].geometry
							}
							material={
								nodes['Metal_Brushed-material_2'].material
							}
						/>
					</group>
					<group
						position={[-5.25, -4.9, 11.85]}
						rotation={[Math.PI, Math.PI / 2, 0]}
						scale={[1.5, 1.5, 1.5]}
					>
						<mesh
							geometry={
								nodes['Metal_Brushed-material_3'].geometry
							}
							material={
								nodes['Metal_Brushed-material_3'].material
							}
						/>
					</group>
					<group
						position={[5.25, -4.9, 11.85]}
						rotation={[Math.PI, Math.PI / 2, 0]}
						scale={[1.5, 1.5, 1.5]}
					>
						<mesh
							geometry={
								nodes['Metal_Brushed-material_4'].geometry
							}
							material={
								nodes['Metal_Brushed-material_4'].material
							}
						/>
					</group>
					<group
						position={[-12.31, 0, -0.3]}
						rotation={[0, 0, -Math.PI / 6]}
						scale={[1, 1, 0.85]}
					>
						<mesh
							geometry={nodes['White_Panel-material_6'].geometry}
							material={nodes['White_Panel-material_6'].material}
						/>
						<mesh
							geometry={nodes['White_Gloss-material_4'].geometry}
							material={nodes['White_Gloss-material_4'].material}
						/>
						<mesh
							geometry={nodes['Metal_Chrome-material_4'].geometry}
							material={nodes['Metal_Chrome-material_4'].material}
						/>
					</group>
					<group
						position={[12.69, 0, -0.3]}
						rotation={[0, 0, -Math.PI / 6]}
						scale={[1, 1, 0.85]}
					>
						<mesh
							geometry={nodes['White_Panel-material_7'].geometry}
							material={nodes['White_Panel-material_7'].material}
						/>
						<mesh
							geometry={nodes['White_Gloss-material_5'].geometry}
							material={nodes['White_Gloss-material_5'].material}
						/>
						<mesh
							geometry={nodes['Metal_Chrome-material_5'].geometry}
							material={nodes['Metal_Chrome-material_5'].material}
						/>
					</group>
					<group
						position={[0, -4.9, -5.4]}
						rotation={[-Math.PI / 2, 0, 0]}
						scale={[1.5, 1.5, 1.5]}
					>
						<mesh
							geometry={
								nodes['Metal_Brushed-material_5'].geometry
							}
							material={
								nodes['Metal_Brushed-material_5'].material
							}
						/>
					</group>
					<group
						position={[0, -4.9, -7.4]}
						rotation={[-Math.PI / 2, 0, 0]}
						scale={[1.5, 1.5, 1.5]}
					>
						<mesh
							geometry={nodes['White_Panel-material_8'].geometry}
							material={nodes['White_Panel-material_8'].material}
						/>
						<mesh
							geometry={nodes['Solar_Cell-material_8'].geometry}
							material={nodes['Solar_Cell-material_8'].material}
						/>
						<mesh
							geometry={nodes['Metal_Matte-material_9'].geometry}
							material={nodes['Metal_Matte-material_9'].material}
						/>
					</group>
					<group
						position={[0, -4.9, -19.94]}
						rotation={[-Math.PI / 2, 0, 0]}
						scale={[1.5, 1.5, 1.5]}
					>
						<mesh
							geometry={nodes['Metal_Matte-material_10'].geometry}
							material={nodes['Metal_Matte-material_10'].material}
						/>
					</group>
					<group
						position={[0, -4.9, -22.4]}
						rotation={[-Math.PI / 2, 0, 0]}
						scale={[1.5, 1.5, 1.5]}
					>
						<mesh
							geometry={nodes['White_Panel-material_9'].geometry}
							material={nodes['White_Panel-material_9'].material}
						/>
						<mesh
							geometry={nodes['Solar_Cell-material_9'].geometry}
							material={nodes['Solar_Cell-material_9'].material}
						/>
						<mesh
							geometry={nodes['Metal_Matte-material_11'].geometry}
							material={nodes['Metal_Matte-material_11'].material}
						/>
					</group>
					<group
						position={[0, -4.9, -19.94]}
						rotation={[-Math.PI / 2, 0, 0]}
						scale={[1.5, 1.5, 1.5]}
					>
						<mesh
							geometry={nodes['White_Panel-material_10'].geometry}
							material={nodes['White_Panel-material_10'].material}
						/>
						<mesh
							geometry={nodes['Solar_Cell-material_10'].geometry}
							material={nodes['Solar_Cell-material_10'].material}
						/>
						<mesh
							geometry={nodes['Metal_Matte-material_12'].geometry}
							material={nodes['Metal_Matte-material_12'].material}
						/>
					</group>
				</group>
			</group>
		</animated.group>
	);
}

useGLTF.preload(path);
